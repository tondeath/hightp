load("/home/nuttapong/Desktop/block4/hightp/homework3/HW3_combined_handout/HW3_combined_handout/hw3switchList.Rdata")
all_salmons2$abundance
colnames(all_salmons2$abundance)
colnames(all_salmons2$abundance)[-1]
designMat <- data.frame(sampleID=colnames(all_salmons2$abundance)[-1])
View(designMat)
View(designMat)
str_replace(colnames(all_salmons2$abundance)[-1], "[0-9]")
str_replace(colnames(all_salmons2$abundance)[-1], "[0-9]", "")
designMat <- data.frame(sampleID=colnames(all_salmons2$abundance)[-1],
condition=
str_replace(colnames(all_salmons2$abundance)[-1], "[0-9]", ""))
switchAnalyzeRList <- importRdata(all_salmons2$abundance,
designMatrix = designMat,
isoformExonAnnoation =
"./salmon_result_part2/salmon_result_part2/subset.gtf",
addAnnotatedORFs=FALSE)
switchAnalyzeRList$exons
switchAnalyzeRList$isoformFeatures
switchAnalyzeRList$runInfo
library(IsoformSwitchAnalyzeR)
vignette("IsoformSwitchAnalyzeR")
?importRdata
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/home/nuttapong/Desktop/block4/hightp/homework3/HW3_combined_handout/HW3_combined_handout/")
library(IsoformSwitchAnalyzeR)
library(tidyverse)
library(pheatmap)
wt1_quant <- read_tsv("./salmon_result_part1/salmon_result_part1/WT1/quant.sf")
wt1_quant %>% ggplot(aes(x=Length, y=EffectiveLength)) +
scale_x_continuous(trans='log10') + scale_y_continuous(trans='log10')  +
geom_point(alpha=0.3) +
geom_smooth() + geom_abline(color = "red", linetype=2)
all_salmons <- importIsoformExpression(parentDir =
"./salmon_result_part1/salmon_result_part1/")
salmon_matrix <- as.matrix(all_salmons$abundance[,2:ncol(all_salmons$abundance)])
rownames(salmon_matrix) <- all_salmons$abundance[,1]
transformed_salmon <- log2(salmon_matrix+1)
transformed_salmon[1:4,]
salmon_tibble <- as_tibble(transformed_salmon, rownames=NA)
top100var <- salmon_tibble %>% rownames_to_column() %>% rowwise() %>%
mutate(variance=var(c(WT1, WT2, WT3, WTTPA1, WTTPA2, WTTPA3))) %>%
arrange(desc(variance)) %>% slice(1:100)
top100var_mat <- as.matrix(top100var[,2:7])
rownames(top100var_mat) <- as.data.frame(top100var)[,1]
pheatmap(top100var_mat, show_rownames = TRUE, scale = "row", fontsize_row = 3,
fontsize_col = 5)
all_salmons2 <- importIsoformExpression(parentDir =
"./salmon_result_part2/salmon_result_part2/")
designMat <- data.frame(sampleID=colnames(all_salmons2$abundance)[-1],
condition=
str_replace(colnames(all_salmons2$abundance)[-1], "[0-9]", ""))
switchAnalyzeRList <- importRdata(isoformCountMatrix = all_salmons2$counts,
isoformRepExpression = all_salmons2$abundance,
designMatrix = designMat,
isoformExonAnnoation =
"./salmon_result_part2/salmon_result_part2/subset.gtf",
addAnnotatedORFs=FALSE)
switchAnalyzeRList
?isoformSwitchTestDEXSeq
?DEXSeq
?extractTopSwitches
?subset
data("exampleSwitchListAnalyzed")
exampleSwitchListAnalyzed$isoformFeatures
head(exampleSwitchListAnalyzed$isoformFeatures)
?preFilter
data("exampleSwitchListAnalyzed")
exampleSwitchListAnalyzed
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/home/nuttapong/Desktop/block4/hightp/homework3/HW3_combined_handout/HW3_combined_handout/")
wt1_quant <- read_tsv("./salmon_result_part1/salmon_result_part1/WT1/quant.sf")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/home/nuttapong/Desktop/block4/hightp/homework3/HW3_combined_handout/HW3_combined_handout/")
library(IsoformSwitchAnalyzeR)
library(tidyverse)
library(pheatmap)
wt1_quant <- read_tsv("./salmon_result_part1/salmon_result_part1/WT1/quant.sf")
wt1_quant %>% ggplot(aes(x=Length, y=EffectiveLength)) +
scale_x_continuous(trans='log10') + scale_y_continuous(trans='log10')  +
geom_point(alpha=0.3) +
geom_smooth() + geom_abline(color = "red", linetype=2)
all_salmons <- importIsoformExpression(parentDir =
"./salmon_result_part1/salmon_result_part1/")
salmon_matrix <- as.matrix(all_salmons$abundance[,2:ncol(all_salmons$abundance)])
rownames(salmon_matrix) <- all_salmons$abundance[,1]
transformed_salmon <- log2(salmon_matrix+1)
transformed_salmon[1:4,]
salmon_tibble <- as_tibble(transformed_salmon, rownames=NA)
top100var <- salmon_tibble %>% rownames_to_column() %>% rowwise() %>%
mutate(variance=var(c(WT1, WT2, WT3, WTTPA1, WTTPA2, WTTPA3))) %>%
arrange(desc(variance)) %>% slice(1:100)
salmon_tibble <- as_tibble(transformed_salmon, rownames=NA)
top100var <- salmon_tibble %>% rownames_to_column() %>% rowwise() %>%
mutate(variance=var(c(WT1, WT2, WT3, WTTPA1, WTTPA2, WTTPA3))) %>%
arrange(desc(variance)) %>% slice(1:100)
head(top100var, 5)
top100var_mat <- as.matrix(top100var[,2:7])
rownames(top100var_mat) <- as.data.frame(top100var)[,1]
pheatmap(top100var_mat, show_rownames = TRUE, scale = "row", fontsize_row = 3,
fontsize_col = 5)
top100var_mat <- as.matrix(top100var[,2:7])
rownames(top100var_mat) <- as.data.frame(top100var)[,1]
pheatmap(top100var_mat, show_rownames = TRUE, scale = "none", fontsize_row = 3,
fontsize_col = 5)
top100var_mat <- as.matrix(top100var[,2:7])
rownames(top100var_mat) <- as.data.frame(top100var)[,1]
pheatmap(top100var_mat, show_rownames = TRUE, scale = "row", fontsize_row = 3,
fontsize_col = 5)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/home/nuttapong/Desktop/block4/hightp/homework3/HW3_combined_handout/HW3_combined_handout/")
library(IsoformSwitchAnalyzeR)
library(tidyverse)
library(pheatmap)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/home/nuttapong/Desktop/block4/hightp/homework3/HW3_combined_handout/HW3_combined_handout/")
wt1_quant <- read_tsv("./salmon_result_part1/salmon_result_part1/WT1/quant.sf")
wt1_quant %>% ggplot(aes(x=Length, y=EffectiveLength)) +
scale_x_continuous(trans='log10') + scale_y_continuous(trans='log10')  +
geom_point(alpha=0.3) +
geom_smooth() + geom_abline(color = "red", linetype=2)
all_salmons <- importIsoformExpression(parentDir =
"./salmon_result_part1/salmon_result_part1/")
salmon_matrix <- as.matrix(all_salmons$abundance[,2:ncol(all_salmons$abundance)])
rownames(salmon_matrix) <- all_salmons$abundance[,1]
transformed_salmon <- log2(salmon_matrix+1)
transformed_salmon[1:4,]
salmon_tibble <- as_tibble(transformed_salmon, rownames=NA)
top100var <- salmon_tibble %>% rownames_to_column() %>% rowwise() %>%
mutate(variance=var(c(WT1, WT2, WT3, WTTPA1, WTTPA2, WTTPA3))) %>%
arrange(desc(variance)) %>% slice(1:100)
head(top100var, 5)
top100var_mat <- as.matrix(top100var[,2:7])
rownames(top100var_mat) <- as.data.frame(top100var)[,1]
pheatmap(top100var_mat, show_rownames = TRUE, scale = "row", fontsize_row = 3,
fontsize_col = 5)
all_salmons2 <- importIsoformExpression(parentDir =
"./salmon_result_part2/salmon_result_part2/")
designMat <- data.frame(sampleID=colnames(all_salmons2$abundance)[-1],
condition=
str_replace(colnames(all_salmons2$abundance)[-1], "[0-9]", ""))
switchAnalyzeRList <- importRdata(isoformCountMatrix = all_salmons2$counts,
isoformRepExpression = all_salmons2$abundance,
designMatrix = designMat,
isoformExonAnnoation =
"./salmon_result_part2/salmon_result_part2/subset.gtf",
addAnnotatedORFs=FALSE)
switchAnalyzeRList
summary(switchAnalyzeRList)
switchAnalyzeRList$runInfo
str_replace(colnames(all_salmons2$abundance)[-1], "[0-9]", "")
?importRdata
getwd()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/home/nuttapong/Desktop/block4/hightp/homework3/HW3_combined_handout/HW3_combined_handout/")
switchList <- readRDS("./hw3switchList.Rdata")
switchList$
d
switchList$isoformFeatures
?extractTopSwitches
switchList <- readRDS("./hw3switchList.Rdata")
extractTopSwitches(switchList, filterForConsequences = TRUE, sortByQvals=TURE, n=10)
extractTopSwitches(switchList, filterForConsequences = TRUE, sortByQvals=TRUE, n=10)
extractTopSwitches(switchList, filterForConsequences = TRUE, sortByQvals=TRUE, n=10)[gene_name]
extractTopSwitches(switchList, filterForConsequences = TRUE, sortByQvals=TRUE, n=10)["gene_name"]
switchList <- readRDS("./hw3switchList.Rdata")
top10switch <- extractTopSwitches(switchList, filterForConsequences = TRUE,
sortByQvals=TRUE, n=10)
top10switch
top10switch[,"gene_name"]
top10genes_name <- top10switch[,"gene_name"]
switchList$conditions
switchCondition <- switchList$conditions[,1]
switchCondition
switchCondition[1]
top10genes_name <- top10switch[,"gene_name"]
switchCondition <- switchList$conditions[,1]
for(gene in top10genes_name){
switchPlot(switchList, gene=gene, condition1 = switchCondition[1],
condition2 = switchCondition[2])
}
2genes <- top10genes_name[1:2]
two_genes <- top10genes_name[1:2]
two_genes
switchCondition <- switchList$conditions[,1]
for(gene in two_genes){
switchPlot(switchList, gene=gene, condition1 = switchCondition[1],
condition2 = switchCondition[2])
}
getwd()
top10genes_name <- top10switch[,"gene_name"]
switchCondition <- switchList$conditions[,1]
for(gene in top10genes_name){
png(paste0(gene, ".png", collapse = ""))
switchPlot(switchList, gene=gene, condition1 = switchCondition[1],
condition2 = switchCondition[2])
dev.off()
}
?png
top10genes_name <- top10switch[,"gene_name"]
switchCondition <- switchList$conditions[,1]
for(gene in top10genes_name){
png(paste0(gene, ".png", collapse = ""), width = 1000, height = 1000)
switchPlot(switchList, gene=gene, condition1 = switchCondition[1],
condition2 = switchCondition[2])
dev.off()
}
top10genes_name <- top10switch[,"gene_name"]
switchCondition <- switchList$conditions[,1]
for(gene in top10genes_name){
png(paste0(gene, ".png", collapse = ""), width = 700, height = 700)
switchPlot(switchList, gene=gene, condition1 = switchCondition[1],
condition2 = switchCondition[2])
dev.off()
}
top10genes_name <- top10switch[,"gene_name"]
switchCondition <- switchList$conditions[,1]
for(gene in top10genes_name){
png(paste0(gene, ".png", collapse = ""), width = 700, height = 700, res=150)
switchPlot(switchList, gene=gene, condition1 = switchCondition[1],
condition2 = switchCondition[2])
dev.off()
}
top10genes_name <- top10switch[,"gene_name"]
switchCondition <- switchList$conditions[,1]
for(gene in top10genes_name){
# best resolution pics that are not too big
png(paste0(gene, ".png", collapse = ""), width = 1000, height = 1000, res=150)
switchPlot(switchList, gene=gene, condition1 = switchCondition[1],
condition2 = switchCondition[2])
dev.off()
}
top10genes_name <- top10switch[,"gene_name"]
switchCondition <- switchList$conditions[,1]
for(gene in top10genes_name){
# best resolution pics that are not too big
png(paste0(gene, ".png", collapse = ""), width = 1200, height = 1200, res=160)
switchPlot(switchList, gene=gene, condition1 = switchCondition[1],
condition2 = switchCondition[2])
dev.off()
}
top10genes_name
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/home/nuttapong/Desktop/block4/hightp/homework3/HW3_combined_handout/HW3_combined_handout/")
library(IsoformSwitchAnalyzeR)
library(tidyverse)
library(pheatmap)
switchList <- readRDS("./hw3switchList.Rdata")
top10switch <- extractTopSwitches(switchList, filterForConsequences = TRUE,
sortByQvals=TRUE, n=10)
top10switch
switchList$isoformSwitchAnalysis
head(switchList$isoformSwitchAnalysis)
head(switchList$isoformFeatures)
head(switchList$isoformCountMatrix)
head(switchList$orfAnalysis)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/home/nuttapong/Desktop/block4/hightp/homework3/HW3_combined_handout/HW3_combined_handout/")
library(IsoformSwitchAnalyzeR)
library(tidyverse)
library(pheatmap)
all_salmons2 <- importIsoformExpression(parentDir =
"./salmon_result_part2/salmon_result_part2/")
designMat <- data.frame(sampleID=colnames(all_salmons2$abundance)[-1],
condition=
str_replace(colnames(all_salmons2$abundance)[-1], "[0-9]", ""))
switchAnalyzeRList <- importRdata(isoformCountMatrix = all_salmons2$counts,
isoformRepExpression = all_salmons2$abundance,
designMatrix = designMat,
isoformExonAnnoation =
"./salmon_result_part2/salmon_result_part2/subset.gtf",
addAnnotatedORFs=FALSE)
switchAnalyzeRList
switchList <- readRDS("./hw3switchList.Rdata")
top10switch <- extractTopSwitches(switchList, filterForConsequences = TRUE,
sortByQvals=TRUE, n=10)
top10switch
top10genes_name <- top10switch[,"gene_name"]
switchCondition <- switchList$conditions[,1]
for(gene in top10genes_name){
# best resolution pics that are not too big
png(paste0(gene, ".png", collapse = ""), width = 1200, height = 1200, res=160)
switchPlot(switchList, gene=gene, condition1 = switchCondition[1],
condition2 = switchCondition[2])
dev.off()
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/home/nuttapong/Desktop/block4/hightp/homework3/HW3_combined_handout/")
all_salmons2 <- importIsoformExpression(parentDir =
"./salmon_result_part2/salmon_result_part2/")
designMat <- data.frame(sampleID=colnames(all_salmons2$abundance)[-1],
condition=
str_replace(colnames(all_salmons2$abundance)[-1], "[0-9]", ""))
switchAnalyzeRList <- importRdata(isoformCountMatrix = all_salmons2$counts,
isoformRepExpression = all_salmons2$abundance,
designMatrix = designMat,
isoformExonAnnoation =
"./salmon_result_part2/salmon_result_part2/subset.gtf",
addAnnotatedORFs=FALSE)
switchAnalyzeRList
switchList <- readRDS("./hw3switchList.Rdata")
top10switch <- extractTopSwitches(switchList, filterForConsequences = TRUE,
sortByQvals=TRUE, n=10)
top10switch
top10genes_name <- top10switch[,"gene_name"]
switchCondition <- switchList$conditions[,1]
for(gene in top10genes_name){
# best resolution pics that are not too big
png(paste0(gene, ".png", collapse = ""), width = 1200, height = 1200, res=160)
switchPlot(switchList, gene=gene, condition1 = switchCondition[1],
condition2 = switchCondition[2])
dev.off()
}
top100var_mat <- as.matrix(top100var[,2:7])
?extractConsequenceEnrichmentComparison
extractConsequenceEnrichment(
switchList,
consequencesToAnalyze='all',
analysisOppositeConsequence = TRUE,
returnResult = FALSE
)
extractSplicingEnrichment(
switchList,
returnResult = FALSE
)
?extractSplicingEnrichment
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/home/nuttapong/Desktop/block4/hightp/homework3/HW3_combined_handout/")
wt1_quant %>% ggplot(aes(x=Length, y=EffectiveLength)) +
scale_x_continuous(trans='log10')   +
geom_point(alpha=0.3) +
geom_smooth() + geom_abline(color = "red", linetype=2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/home/nuttapong/Desktop/block4/hightp/homework3/HW3_combined_handout/")
library(IsoformSwitchAnalyzeR)
library(tidyverse)
library(pheatmap)
wt1_quant <- read_tsv("./salmon_result_part1/salmon_result_part1/WT1/quant.sf")
wt1_quant %>% ggplot(aes(x=Length, y=EffectiveLength)) +
scale_x_continuous(trans='log10')   +
geom_point(alpha=0.3) +
geom_smooth() + geom_abline(color = "red", linetype=2)
wt1_quant %>% ggplot(aes(x=Length, y=EffectiveLength)) +
scale_x_continuous(trans='log10')  +
geom_point(alpha=0.3) +
geom_smooth() + geom_abline(color = "red", linetype=2) + ylim(0,1000)
wt1_quant %>% ggplot(aes(x=Length, y=EffectiveLength)) +
scale_x_continuous(trans='log10')  +
geom_point(alpha=0.3) +
geom_smooth() + geom_abline(color = "red", linetype=2) + ylim(0,500)
wt1_quant %>% ggplot(aes(x=Length, y=EffectiveLength)) +
scale_x_continuous(trans='log10') + scale_y_continuous(trans='log10')  +
geom_point(alpha=0.3) +
geom_smooth() + geom_abline(color = "red", linetype=2)
wt1_quant %>% ggplot(aes(x=Length, y=EffectiveLength)) +
scale_x_continuous(trans='log10')   +
geom_point(alpha=0.3) +
geom_smooth() + geom_abline(color = "red", linetype=2) + ylim(0,200)
wt1_quant %>% ggplot(aes(x=Length, y=EffectiveLength)) +
scale_x_continuous(trans='log10') + scale_y_continuous(trans='log10')  +
geom_point(alpha=0.3) +
geom_smooth() + geom_abline(color = "red", linetype=2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "./")
library(IsoformSwitchAnalyzeR)
library(tidyverse)
library(pheatmap)
wt1_quant <- read_tsv("./salmon_result_part1/WT1/quant.sf")
View(wt1_quant)
View(wt1_quant)
wt1_quant %>% filter(Length < 180)
wt1_quant %>% filter(Length < 180) %>% arrange()
wt1_quant %>% filter(Length < 180) %>% arrange(Length)
filtered_dat <- wt1_quant %>% filter(Length < 180) %>% arrange(Length)
View(filtered_dat)
View(filtered_dat)
filtered_dat %>% ggplot() + geom_histogram()
filtered_dat %>% ggplot() + geom_histogram(aes(x=Length))
filtered_dat %>% ggplot() + geom_histogram(aes(x=TPM))
filtered_dat %>% ggplot() + geom_histogram(aes(x=TPM)) + xlim(0,100)
filtered_dat %>% ggplot() + geom_histogram(aes(x=TPM)) + xlim(0,100) + ylim(0,100)
filtered_dat %>% ggplot() + geom_histogram(aes(x=TPM)) + xlim(0,100) + ylim(0,75)
wt1_quant %>% filter(Length > 180) %>% ggplot() + geom_histogram(aes(x=TPM))
wt1_quant %>% filter(Length > 180) %>% ggplot() + geom_histogram(aes(x=TPM)) + xlim(0,500)
wt1_quant %>% filter(Length > 180) %>% ggplot() + geom_histogram(aes(x=TPM)) + xlim(0,100)
wt1_quant %>% filter(Length > 180) %>% ggplot() + geom_histogram(aes(x=TPM)) + xlim(0,100) + ylim(0,100)
knitr::opts_chunk$set(echo = TRUE)
library(VennDiagram)
grid.newpage()
draw.pairwise.venn(581, 485, 345, category = c("ERa", "ERb"),
lty = rep("blank", 2), fill = c("green", "light blue"))
library(tidyverse)
setwd("/home/nuttapong/Desktop/block4/hightp/datamining/data_mining_for_students/data_mining_for_students")
cage_dat <- read_tsv("htbinf_cage_tpms.txt")
View(cage_dat)
View(cage_dat)
head(cage_dat)
exp_mat <- as.matrix(cage_dat[4:10])
rownames(exp_mat) <- cage_dat[,1]
cage_dat[,1]
dim(exp_mat)
cage_dat[nrow(exp_mat),1]
cage_dat[1:nrow(exp_mat),1]
as.vector(cage_dat[1:nrow(exp_mat),1])
cage_dat[1:nrow(exp_mat),1]
cage_dat[1:nrow(exp_mat),]
cage_dat["location",1]
cage_dat["location"]
cage_dat["tc_id"]
cage_dat[,"tc_id"]
cage_dat["tc_id"]
unlist(cage_dat["tc_id"])
cage_dat[["tc_id"]]
rownames(exp_mat) <- cage_dat[["tc_id"]]
View(exp_mat)
View(exp_mat)
exp_mat_norm <- scale(exp_mat)
pca_exp <- prcomp(exp_mat_norm)
View(pca_exp)
View(pca_exp)
pca_exp$x
dim(pca_exp$x)
?prcomp
ggplot(pca_exp, aes(x=PC1, y=PC2)) + geom_point()
pca_tibble <- as_tibble(pca_exp$x)
ggplot(pca_tibble, aes(x=PC1, y=PC2)) + geom_point()
library(pheatmap)
pheatmap(pca_exp$x)
pheatmap(exp_mat)
pheatmap(exp_mat, scale = "row")
pheatmap(exp_mat, scale = "col")
pheatmap(exp_mat, scale = "column")
pheatmap(exp_mat, scale = "row")
kmeans(exp_mat)
kmeans(exp_mat, 5)
kmeans(exp_mat, 7)
kmean_pca <- kmeans(exp_mat, 7)
kmean_pca$cluster
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(pheatmap)
setwd("/home/nuttapong/Desktop/block4/hightp/datamining/data_mining_for_students/data_mining_for_students")
cage_dat <- read_tsv("htbinf_cage_tpms.txt")
# data set contain cage tag cluster id (tc_id) + its location + expression in each tissue
exp_mat <- as.matrix(cage_dat[4:10])
rownames(exp_mat) <- cage_dat[["tc_id"]]
View(exp_mat)
View(exp_mat)
melt_cage <- cage_dat %>% gather(key="tissue", val="TPM", -location, -strand, -tc_id)
View(melt_cage)
View(melt_cage)
pheatmap(exp_mat, scale = "row")
melt_cage %>% ggplot(aes(x=TPM)) + facet_wrap(~tissue)
melt_cage %>% ggplot(aes(x=TPM)) + facet_wrap(~tissue)
melt_cage <- cage_dat %>% gather(key="tissue", val="TPM", -location, -strand, -tc_id)
melt_cage %>% ggplot(aes(x=TPM)) + facet_wrap(~tissue)
melt_cage %>% ggplot(aes(x=TPM)) + facet_wrap(~tissue) + geom_histogram()
melt_cage %>% ggplot(aes(x=TPM)) + facet_wrap(~tissue) + geom_histogram(bins = 50)
pkgs <- c("factoextra",  "NbClust")
install.packages(pkgs)
library(factoextra)
library(NbClust)
library(HTSCluster)
install.packages(HTSCluster)
install.packages("HTSCluster")
pheatmap(exp_mat, scale = "row")
install.packages("factoextra")
library(NbClust)
library(factoextra)
fviz_nbclust(df, kmeans, method = "wss") +
labs(subtitle = "Elbow method")
fviz_nbclust(exp_mat_norm, kmeans, method = "wss") +
labs(subtitle = "Elbow method")
fviz_nbclust(df, kmeans, method = "silhouette")+
labs(subtitle = "Silhouette method")
fviz_nbclust(exp_mat_norm, kmeans, method = "silhouette")+
labs(subtitle = "Silhouette method")
fviz_nbclust(exp_mat_norm), kmeans, nstart = 25,  method = "gap_stat", nboot = 50)+
fviz_nbclust(exp_mat_norm, kmeans, nstart = 25,  method = "gap_stat", nboot = 50)+
labs(subtitle = "Gap statistic method")
six_cluster <- kmeans(exp_mat_norm, 6)
six_cluster$cluster
as.data.frame(six_cluster$cluster)
View(exp_mat_norm)
View(exp_mat_norm)
?pheatmap
as.vector(six_cluster$cluster)
pheatmap(exp_mat, scale = "row", annotation_row=cluster_assignment)
cluster_assignment <- as.data.frame(six_cluster$cluster)
pheatmap(exp_mat, scale = "row", annotation_row=cluster_assignment)
pheatmap(exp_mat, scale = "row", annotation_row=cluster_assignment)
pheatmap(exp_mat, scale = "row", annotation_row=cluster_assignment, show_rownames = FALSE)
pheatmap(exp_mat, scale = "row", annotation_row=cluster_assignment, show_rownames = FALSE)
cluster_assignment
pheatmap(exp_mat, scale = "row", annotation_row=cluster_assignment, show_rownames = FALSE, show_colnames = FALSE)
pheatmap(exp_mat, scale = "row", annotation_row=cluster_assignment, show_rownames = FALSE, show_colnames = FALSE)
pheatmap((exp_mat), scale = "row", annotation_row=cluster_assignment, show_rownames = FALSE
)
)
pheatmap((exp_mat), scale = "row", annotation_row=cluster_assignment, show_rownames = FALSE)
pheatmap((exp_mat), scale = "row", annotation_row=(cluster_assignment), show_rownames = FALSE)
pheatmap((exp_mat), scale = "row", annotation_row=(cluster_assignment), show_rownames = FALSE)
transpose()
transposed_exp_mat <- transpose(exp_mat_norm)
t(exp_mat_norm)
transposed_exp_mat <- t(exp_mat_norm)
pca_transposed_exp <- prcomp(transposed_exp_mat)
ggplot(pca_transposed_exp$x, aes(x=PC1, y=PC2)) + geom_point()
ggplot(as.dataframe(pca_transposed_exp$x), aes(x=PC1, y=PC2)) + geom_point()
ggplot(as.data.frame(pca_transposed_exp$x), aes(x=PC1, y=PC2)) + geom_point()
?scale
?apply
